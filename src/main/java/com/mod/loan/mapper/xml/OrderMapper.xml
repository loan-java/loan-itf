<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mod.loan.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.mod.loan.model.Order">
        <!-- WARNING - @mbg.generated -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="borrow_day" jdbcType="INTEGER" property="borrowDay"/>
        <result column="borrow_money" jdbcType="DECIMAL" property="borrowMoney"/>
        <result column="actual_money" jdbcType="DECIMAL" property="actualMoney"/>
        <result column="total_rate" jdbcType="DECIMAL" property="totalRate"/>
        <result column="total_fee" jdbcType="DECIMAL" property="totalFee"/>
        <result column="interest_rate" jdbcType="DECIMAL" property="interestRate"/>
        <result column="interest_fee" jdbcType="DECIMAL" property="interestFee"/>
        <result column="overdue_rate" jdbcType="DECIMAL" property="overdueRate"/>
        <result column="overdue_day" jdbcType="INTEGER" property="overdueDay"/>
        <result column="overdue_fee" jdbcType="DECIMAL" property="overdueFee"/>
        <result column="should_repay" jdbcType="DECIMAL" property="shouldRepay"/>
        <result column="had_repay" jdbcType="DECIMAL" property="hadRepay"/>
        <result column="reduce_money" jdbcType="DECIMAL" property="reduceMoney"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime"/>
        <result column="arrive_time" jdbcType="TIMESTAMP" property="arriveTime"/>
        <result column="repay_time" jdbcType="TIMESTAMP" property="repayTime"/>
        <result column="real_repay_time" jdbcType="TIMESTAMP" property="realRepayTime"/>
        <result column="order_version" jdbcType="INTEGER" property="orderVersion"/>
        <result column="merchant" jdbcType="VARCHAR" property="merchant"/>
        <result column="follow_user_id" jdbcType="BIGINT" property="followUserId"/>
        <result column="payment_type" jdbcType="VARCHAR" property="paymentType"/>
        <result column="source" jdbcType="INTEGER" property="source"/>
    </resultMap>

    <select id="selectOverdueOrderRZ" resultMap="BaseResultMap">
		select * from tb_order where status=33 and source=1
	</select>

    <update id="updateToOverdue">
    	update tb_order set status = 33 where status=31 and DATEDIFF(NOW(),repay_time) >= 1
	</update>

    <update id="updateOverdueFee">
	    update tb_order
	    set overdue_fee = borrow_money*overdue_rate/100*DATEDIFF(NOW(),repay_time) ,
	    should_repay = borrow_money+borrow_money*overdue_rate/100*DATEDIFF(NOW(),repay_time)+interest_fee-reduce_money-had_repay ,
	    overdue_day=DATEDIFF(NOW(),repay_time)
	    where status=33 and DATEDIFF(NOW(),repay_time)>0
	</update>

    <update id="updateInterestFee">
		update tb_order
		set interest_fee = borrow_money*interest_rate/1000*DATEDIFF(DATE_ADD(NOW(),INTERVAL 1 day),arrive_time),
		should_repay = borrow_money+interest_fee-reduce_money-had_repay+overdue_fee
		where status > 30 and status &lt; 40 and status &lt;> 34  and DATEDIFF(now(),arrive_time)>0
	</update>

    <update id="updateToBadDebt">
		update tb_order set status = 34 where status=33 and DATEDIFF(NOW(),repay_time) >= 30
	</update>

    <select id="findByStatusAndOverdays" resultType="map">
	SELECT o.merchant as merchant, m.merchant_app as merchantApp , u.user_phone as userPhone,o.id as orderId ,o.uid as uid,u.user_name as userName FROM tb_order o,tb_user u ,tb_merchant m
	where o.uid=u.id and o.status = #{status} and datediff(now(),o.repay_time) ${op} #{days} and o.merchant=m.merchant_alias
	</select>

    <select id="findOrderWaitAutoAudit" resultMap="BaseResultMap">
		select id,uid,merchant from tb_order where status=11  and  create_time &lt;= DATE_SUB(NOW(),INTERVAL #{minute}  MINUTE )
	</select>

    <update id="updateOrderVersion">
		update tb_order set order_version=order_version+1 where id=#{orderId}
	</update>

    <select id="findByRepayTime" resultMap="BaseResultMap">
		SELECT
			*
		FROM
			tb_order
		WHERE
			status = 31
			AND repay_time = #{repayTime}
	</select>
    <select id="findOverdueOrders" resultMap="BaseResultMap">
		select * from tb_order where merchant="zhenhaohua" and status = 33 and DATEDIFF(NOW(),repay_time) >= 1
	</select>

    <select id="findBadOrders" resultMap="BaseResultMap">
		select * from tb_order where merchant="zhenhaohua" and status = 34 and DATEDIFF(NOW(),repay_time) >= 1
	</select>

    <select id="selectOrderList" resultMap="BaseResultMap">
		select * from tb_order where status > 30 and status &lt;40
	</select>

    <select id="findTodayOverdueInfo" resultMap="BaseResultMap">
        SELECT * FROM tb_order
		WHERE `status` = 33
		and DATEDIFF(NOW(),repay_time) >= 1
-- 		or DATEDIFF(NOW(),repay_time) = 7
-- 		or DATEDIFF(NOW(),repay_time) = 14
-- 		or DATEDIFF(NOW(),repay_time) = 21
-- 		or DATEDIFF(NOW(),repay_time) = 28)
    </select>

</mapper>